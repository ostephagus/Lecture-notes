name: latex-deploy-changes

on:
  workflow_dispatch:
  push:
    paths:
      - "**.tex"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0
      with:
        fetch-depth: 0
    
    - name: Determine changed .tex files
      id: changes
      run: |
        echo "Changed files:"
        git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.tex$' > changed_tex.txt || true
        cat changed_tex.txt || true

        # filter out header.tex
        grep -v '^header\.tex$' changed_tex.txt > texfiles.txt || true

        # find which Main.tex files need recompiling
        echo "" > main_files.txt
        while IFS= read -r file; do
          [ -z "$file" ] && continue

          if [[ "$file" == *"Main.tex" ]]; then
            echo "$file" >> main_files.txt
          elif [[ "$file" == *"/Chapters/"* ]]; then
            # get directory containing Main.tex
            main_dir=$(dirname "$(dirname "$file")")
            main_file="$main_dir/Main.tex"
            if [ -f "$main_file" ]; then
              echo "$main_file" >> main_files.txt
            fi
          fi
        done < texfiles.txt

        # remove duplicates
        grep -v '^[[:space:]]*$' main_files.txt | sort -u > main_files.txt
        echo "Files to compile:"
        cat main_files.txt || echo "None"

        # export as output (for next step)
        files=$(paste -sd "," main_files.txt)
        echo "main_files=$files" >> $GITHUB_OUTPUT
    
    - name: Compile changed Main.tex files
      if: steps.changes.outputs.main_files != ''
      run: |
        mkdir output
        export TEXINPUTS=".:${{ github.workspace }}//:"
        IFS=',' read -ra files <<< "${{ steps.changes.outputs.main_files }}"
        for file in "${files[@]}"; do
          dir=$(dirname "$file")
          filename=$(basename "$dir")
          echo "::group::Compiling $filename"
          echo "Compiling $file in $dir"
          cd "$dir"
          latexmk -pdf -interaction=nonstopmode Main.tex || true
          cp Main.pdf "${{ github.workspace }}/output/$filename.pdf"
          cd - > /dev/null
          echo "::endgroup::"
        done
        
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy folder via rsync
      run: |
        rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./output/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}pdfs/
